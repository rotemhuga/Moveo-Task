[{"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\Moveo-Task\\m-task-front\\src\\index.tsx":"1","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\Moveo-Task\\m-task-front\\src\\reportWebVitals.ts":"2","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\Moveo-Task\\m-task-front\\src\\App.tsx":"3","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\Moveo-Task\\m-task-front\\src\\components\\LobbyPage\\LobbyPage.tsx":"4","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\Moveo-Task\\m-task-front\\src\\store\\store.ts":"5","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\Moveo-Task\\m-task-front\\src\\store\\slices\\codeSlice.tsx":"6"},{"size":676,"mtime":1681981751952,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1681980523651,"results":"9","hashOfConfig":"8"},{"size":631,"mtime":1681981166955,"results":"10","hashOfConfig":"8"},{"size":3851,"mtime":1681979437961,"results":"11","hashOfConfig":"8"},{"size":262,"mtime":1681978291384,"results":"12","hashOfConfig":"8"},{"size":915,"mtime":1681983419236,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"134jzef",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\Moveo-Task\\m-task-front\\src\\index.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\Moveo-Task\\m-task-front\\src\\reportWebVitals.ts",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\Moveo-Task\\m-task-front\\src\\App.tsx",["34","35"],[],"import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route , Routes} from 'react-router-dom';\nimport LobbyPage from \"../src/components/LobbyPage/LobbyPage\"\n// import OneCodePage from './component/OneCodePage/OneCodePage';\n// import { io } from 'socket.io-client';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  return (\n\t\t<BrowserRouter>\n      <Routes>\n        <Route\n            path=\"/\"\n            element={<LobbyPage />}\n\t\t\t\t/>\n        {/* <Route\n            path=\"/oneCodePage\"\n            element={<OneCodePage />}\n\t\t\t\t/> */}\n      </Routes>\n\t\t</BrowserRouter>\n  );\n}\n\nexport default App;","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\Moveo-Task\\m-task-front\\src\\components\\LobbyPage\\LobbyPage.tsx",["36","37","38","39","40","41","42","43","44"],[],"import \"../LobbyPage/LobbyPage.css\"\r\n// import { AllCodesValue, ICode } from \"../../store/slices/codesSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { IRootState } from \"../../store/store\";\r\n// import { io } from 'socket.io-client';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport codeSlice from \"../../store/slices/codeSlice\";\r\n// import codesSlice from \"../../store/slices/codesSlice\";\r\nimport CardCode from \"../CodeCard/CodeCard\";\r\nimport { ICodeCard } from \"../CodeCard/CodeCard\";\r\n\r\n// const socket = io(\"http://localhost:8000\")\r\n\r\nconst LobbyPage: React.FC = () => {\r\n    // const codesData = useSelector((state:IRootState) => state.codes.value)\r\n    // const [message, setMessage] = useState(\"\");\r\n    // const [messageReceived, setMessageReceived] = useState(\"\");\r\n\r\n    // useEffect(() => {\r\n    //     socket.on(\"recieve_message\", (data:any) => {\r\n    //     setMessageReceived(data.message)\r\n    //     });\r\n    // }, [socket]);\r\n\r\n    //     const handleInputChange = (event:any) => {\r\n    //     setMessage(event.target.value);\r\n    //     socket.emit(\"send_message\", { message: event.target.value });\r\n    // };\r\n\r\n//  \r\n// const codes = allCodes.map((code:any) => {\r\n//             return <CardCode \r\n//             _id = {code._id}\r\n//             title = {code.title}\r\n//             code = {code.code}\r\n//             key = {code._id}\r\n//         />  \r\n// })\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className=\"lobby-page-content\">\r\n            <h1 className=\"lobby-title\">Lobby Page</h1>\r\n            <h2>Choose code block</h2>\r\n            <div className=\"all-buttons\">\r\n                <div>\r\n                </div>\r\n                <button>\r\n                    async \r\n                </button>\r\n                <button>\r\n                    Redux\r\n                </button>\r\n                <button>\r\n                    style component\r\n                </button>\r\n                <button>\r\n                    style component\r\n                </button>\r\n                <button>\r\n                    aaaaa\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default LobbyPage\r\n\r\n\r\n// working \r\n// import \"../LobbyPage/LobbyPage.css\"\r\n// import { AllCodesValue, ICode } from \"../../store/slices/codesSlice\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { useEffect, useState } from \"react\";\r\n// import { IRootState } from \"../../store/store\";\r\n// import { ICodeState } from \"../../store/store\";\r\n\r\n// // const Codes:any = async () => {\r\n// //     const [data, setData] = useState<any>(null);\r\n// // \ttry {\r\n// // \t\tconst response = await fetch(\"http://localhost:8000/moveoTask/codes\", {\r\n// // \t\t\tmethod: \"GET\",\r\n// // \t\t});\r\n// // \t\tconst codesData = await response.json();\r\n// //         setData(codesData);\r\n// // \t\treturn codesData;\r\n// // \t} catch (err) {\r\n// // \t\tconsole.log();\r\n// // \t}\r\n\r\n\r\n\r\n// const LobbyPage: React.FC = () => {\r\n    \r\n//     // const dispatch = useDispatch();\r\n//     // const allCodes:any = useSelector(\r\n//     //     (state:IRootState) => state.codes.value\r\n//     // );\r\n//     // const filteredCodes = allCodes.filter((restObj:any) => restObj.title === \"try\")\r\n//     // return filteredCodes\r\n//     return (\r\n//         <div>\r\n//             <h1 className=\"lobby-title\">Lobby Page</h1>\r\n//             <button>\r\n//                 Async code\r\n//             </button>\r\n//             <button>\r\n//                 Redux\r\n//             </button>\r\n//             <button>\r\n//                 style component\r\n//             </button>\r\n//             <button>\r\n//                 style component\r\n//             </button>\r\n//             {/* <div>{allCodes}</div> */}\r\n//         </div>\r\n//     )\r\n// }\r\n// export default LobbyPage\r\n\r\n","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\Moveo-Task\\m-task-front\\src\\store\\store.ts",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\Moveo-Task\\m-task-front\\src\\store\\slices\\codeSlice.tsx",["45"],[],{"ruleId":"46","severity":1,"message":"47","line":7,"column":10,"nodeType":"48","messageId":"49","endLine":7,"endColumn":19},{"ruleId":"46","severity":1,"message":"50","line":7,"column":21,"nodeType":"48","messageId":"49","endLine":7,"endColumn":29},{"ruleId":"46","severity":1,"message":"51","line":3,"column":23,"nodeType":"48","messageId":"49","endLine":3,"endColumn":34},{"ruleId":"46","severity":1,"message":"47","line":4,"column":10,"nodeType":"48","messageId":"49","endLine":4,"endColumn":19},{"ruleId":"46","severity":1,"message":"50","line":4,"column":21,"nodeType":"48","messageId":"49","endLine":4,"endColumn":29},{"ruleId":"46","severity":1,"message":"52","line":5,"column":10,"nodeType":"48","messageId":"49","endLine":5,"endColumn":20},{"ruleId":"46","severity":1,"message":"53","line":7,"column":10,"nodeType":"48","messageId":"49","endLine":7,"endColumn":21},{"ruleId":"46","severity":1,"message":"54","line":8,"column":8,"nodeType":"48","messageId":"49","endLine":8,"endColumn":17},{"ruleId":"46","severity":1,"message":"55","line":10,"column":8,"nodeType":"48","messageId":"49","endLine":10,"endColumn":16},{"ruleId":"46","severity":1,"message":"56","line":11,"column":10,"nodeType":"48","messageId":"49","endLine":11,"endColumn":19},{"ruleId":"46","severity":1,"message":"57","line":40,"column":11,"nodeType":"48","messageId":"49","endLine":40,"endColumn":19},{"ruleId":"58","severity":1,"message":"59","line":33,"column":27,"nodeType":"60","messageId":"61","endLine":33,"endColumn":38},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useSelector' is defined but never used.","'IRootState' is defined but never used.","'useNavigate' is defined but never used.","'codeSlice' is defined but never used.","'CardCode' is defined but never used.","'ICodeCard' is defined but never used.","'dispatch' is assigned a value but never used.","no-self-assign","'state.value' is assigned to itself.","MemberExpression","selfAssignment"]